// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Custom LibreOffice",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	// "image": "mcr.microsoft.com/devcontainers/python:0-3.11"
	// "image": "dockdock/libreoffice73pyenvpoetry:lo-7.5.3-RELEASE",
	"build":{
		"dockerfile": "Dockerfile"
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-python.python",
				"ms-azuretools.vscode-docker",
				"njpwerner.autodocstring",
				"maptz.regionfolder"
			]
		}
	},
	// "containerEnv": {
	// 	"PYTHONPATH": "/workspaces/libreoffice-modern-code-editing-py"
	// },

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
	// "postCreateCommand": "export PYTHONPATH=$(pwd)",
	// "postStartCommand": [
	// 	// "if [ -d \"$PWD/.venv\" ]; then rm -Rf \"$PWD/.venv\"; fi",
	// 	// "if [ -d .venv ]; then poetry env use $(pwd)/.venv/bin/python; fi",
	// 	// "&& if [ -d .venv ]; then poetry env use $(pwd)/.venv/bin/python; fi",
	// 	"poetry config virtualenvs.in-project true",
	// 	// "&& poetry install",
	// 	// "&& poetry env use \"$PWD/.venv\"",
	// 	"&& git config --global --add safe.directory '*'"
	// ]
	"postStartCommand": "poetry env info && echo \"All done\""
}
